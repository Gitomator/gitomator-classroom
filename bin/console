#!/usr/bin/env ruby

require "bundler/setup"
require "gitomator/classroom"
require "gitomator/classroom/script_util"


module Gitomator
  module Classroom
    module Console

      @@context

      def self.context=(context)
        @@context=context
      end

      def gitomator_context
        @@context
      end

    end
  end
end



opts = Gitomator::Classroom::ScriptUtil::DefaultOptionParser.new(
  "Usage: #{File.basename($0)}"
).parse(ARGV)


if opts[:context]
  require 'gitomator/classroom/context'
  Gitomator::Classroom::Console.context = Gitomator::Classroom::Context.from_file(opts[:context])
end
include Gitomator::Classroom::Console



def logger
  if gitomator_context && gitomator_context.respond_to?(:logger)
    gitomator_context.logger
  else
    nil
  end
end

def git
  if gitomator_context && gitomator_context.respond_to?(:git)
    gitomator_context.git
  else
    nil
  end
end

def hosting
  if gitomator_context && gitomator_context.respond_to?(:hosting)
    gitomator_context.hosting
  else
    nil
  end
end

def ci
  if gitomator_context && gitomator_context.respond_to?(:ci)
    gitomator_context.ci
  else
    nil
  end
end

def tagging
  if gitomator_context && gitomator_context.respond_to?(:tagging)
    gitomator_context.tagging
  else
    nil
  end
end


require "irb"
IRB.start
