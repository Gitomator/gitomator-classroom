#!/usr/bin/env ruby

require "bundler/setup"
require "gitomator/classroom"
require "gitomator/classroom/script_util"


module Gitomator
  module Classroom
    module Console

      def self.load_context(context_file)
        require 'gitomator/classroom/context'
        @@context = Gitomator::Classroom::Context.from_file(context_file)
        @@context_file = context_file
        return @@context
      end


      def gitomator_context
        @@context
      end

      def gitomator_context_file
        @@context_file
      end

    end
  end
end



opts = Gitomator::Classroom::ScriptUtil::DefaultOptionParser.new(
  "Usage: #{File.basename($0)}"
).parse(ARGV)


context_file = opts[:context]

if File.exist? context_file.to_s
  # Create a context
  context = Gitomator::Classroom::Console.load_context(context_file)

  # Define some convenience console methods ...
  [:git, :hosting, :ci, :tagging].each do |m|
    if context.respond_to? m
      define_method(m) { context.send(m) }
    else
      define_method(m) { nil }
    end
  end

elsif ! context_file.nil?
  puts "Cannot load Gitomator context. No such file, #{context_file}"
end


include Gitomator::Classroom::Console
require "irb"
IRB.start
