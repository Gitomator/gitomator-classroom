#!/usr/bin/env ruby

require 'bundler/setup'
require 'classroom_automator/script_util'
require 'gitomator/task/create_repos'

include ClassroomAutomator

usage_message  = "Usage: #{File.basename($0)} ASSIGNMENT-CONFIG"
banner = <<-EOS
Command-line tool to create repos based on a configuration file.

  #{usage_message}

Repos can be created empty, or based on an existing source_repo (specified in the configuration file).
EOS

parser = ScriptUtil::DefaultOptionParser.new(banner)
parser.opt :update_existing,
    "Update existing repos by pushing recent changes from the source_repo",
    :default => false

opts = parser.parse(ARGV)
abort usage_message if ARGV.length != 1

context = ScriptUtil::context_from_file(opts[:context])
assignment = ScriptUtil::assignment_config_from_file(ARGV[0])

task_opts = {}
if assignment.source_repo
  task_opts[:source_repo] = assignment.source_repo
end
if assignment.create_opts
  task_opts[:create_opts] = assignment.create_opts.map {|k,v| [k.to_sym,v]} .to_h
end
if opts[:update_existing]
  task_opts[:update_existing] = true
end

ScriptUtil::run_task(
  Gitomator::Task::CreateRepos.new(context, assignment.repos.keys, task_opts)
)
